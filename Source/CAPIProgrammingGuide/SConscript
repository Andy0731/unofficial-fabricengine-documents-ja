#
# Copyright (c) 2010-2016, Fabric Software Inc. All rights reserved.
#

import os, re
Import('docEnv', 'capiHeader', 'buildDir')

def extractSphinxDocs(target, source, env):
  f = open(source[0].abspath)
  lines = f.readlines()
  f.close()

  sourcePattern = re.compile(r'{{([A-Za-z_0-9]*)}}')
  
  curBase = None
  baseToFileHandle = {}
  for line in lines:
    strippedLine = line.strip()
    if strippedLine[0:9] == "/*SPHINX:":
      curBase = strippedLine[9:].strip()
      if not curBase in baseToFileHandle:
        baseToFileHandle[curBase] = open(buildDir.Dir('Documentation').Dir('CAPIProgrammingGuide').File(curBase + ".rst").abspath, "w")
      baseToFileHandle[curBase].write('\n\n')
    elif strippedLine[0:2] == "*/":
      if curBase:
        baseToFileHandle[curBase].write('\n\n')
      curBase = None
    elif curBase:
      line = sourcePattern.sub(r'|\1|', line)
      baseToFileHandle[curBase].write(line)
  for base, fileHandle in baseToFileHandle.items():
    fileHandle.close()
  
  return None

inputRSTFiles = [
  docEnv.Command(
    map(
      lambda basename: docEnv.File(basename + ".rst"),
      [
        'index',
        'intro',
        'build-env',
        'c-interface',
        'cpp-interface',
        'clients',
        'canvas'
        ]
      ),
    capiHeader,
    extractSphinxDocs
  )
]
Return('inputRSTFiles')
