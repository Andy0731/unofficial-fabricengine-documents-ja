#
msgid ""
msgstr ""
"Project-Id-Version: Fabric Engine 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 18:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\source\CoreOverview\kl.rst:2
msgid "The KL Language"
msgstr "KL 言語"

#: ..\..\source\CoreOverview\kl.rst:4
msgid ""
"KL is the custom language used to define operators in |FABRIC_PRODUCT_NAME|."
" KL combines the benefits of high performance languages like C++ with the "
"benefits of dynamic languages like JavaScript and Python. ‘KL’ stands for "
"‘Kernel Language’ and refers to the scope of the language: writing "
"operators. Kernels are small stateless blocks of code with an entry "
"function. The syntax of KL is similar to the syntax of JavaScript and C."
msgstr ""
"KL は |FABRIC_PRODUCT_NAME| でのオペレータ定義に使用されるカスタム言語です。KLはC++のようなハイパフォーマンス言語の利点と、J"
"avaScriptやPythonのような動的言語の利点を兼ね備えています。 「KL」 とは、 「Kernel Language」 "
"の略で、この言語の守備範囲は オペレータの記述にあります。カーネルとは、エントリー関数を１つ備えた一連の、小さなコードのステートレスブロックです。KLのシン"
"タックスは JavaScriptやC のシンタックスに似ています。"

#: ..\..\source\CoreOverview\kl.rst:7
msgid "Ease of Use"
msgstr "使い勝手"

#: ..\..\source\CoreOverview\kl.rst:9
msgid ""
"KL is a language intended to be used by developers of all levels, "
"particularly those comfortable with dynamic languages. Developers familiar "
"with dynamic languages like Python and JavaScript can quickly learn the "
"rules of KL. Developers familiar with static languages will find KL easy to "
"pick up."
msgstr ""
"KLは全てのレベルの開発者 ― とくに動的言語に慣れ親しんだ開発者に使用されることを意図しています。JavaScript や Python "
"のような動的言語が得意な開発者は KL の作法を素早く習得できるでしょう。静的言語が得意な開発者であってもものにするのは容易でしょう。"

#: ..\..\source\CoreOverview\kl.rst:12
msgid "Dynamic Compilation"
msgstr ""

#: ..\..\source\CoreOverview\kl.rst:14
msgid ""
"|FABRIC_PRODUCT_NAME| integrates the LLVM compiler and uses it to compile "
"the KL source code used in operators. The KL source code is compiled by "
"|FABRIC_PRODUCT_NAME| as the dynamic language constructs each operator. "
"There are no custom IDE tools required to work with |FABRIC_PRODUCT_NAME|, "
"so developers can continue to use their normal editors. Applications can use"
" dynamic compilation to create applications that have self-modifying "
"behavior."
msgstr ""
"|FABRIC_PRODUCT_NAME| は LLVMコンパイラを統合し、オペレータに使用された KL ソースコードをコンパイルします。 "
"|FABRIC_PRODUCT_NAME| は、KLソースコードをコンパイルし、動的言語として各オペレータを構築します。 "
"|FABRIC_PRODUCT_NAME| での作業にあたり特殊なIDEツールを必要としません。開発者は各自、普段使用するエディタを使い続けることができます"
"。アプリケーションは動的コンパイルを使用し、その振舞をそのアプリケーション上から変更していくことができます。"

#: ..\..\source\CoreOverview\kl.rst:17
msgid "Cross Platform"
msgstr ""

#: ..\..\source\CoreOverview\kl.rst:19
msgid ""
"|FABRIC_PRODUCT_NAME| applications are completely dynamic and portable "
"across operating systems, CPU architectures and devices. This is because "
"|FABRIC_PRODUCT_NAME| dynamically compiles KL source code on target, which "
"ensures that there is no compromise on performance. |FABRIC_PRODUCT_NAME| "
"currently supports all major operating systems on x86 architectures, and "
"support for a wider range of CPU architectures is in development."
msgstr ""
"|FABRIC_PRODUCT_NAME| アプリケーションは完全に動的であり、オペレーティングシステムや、CPUアーキテクチャや、デバイスをまたいで移植可"
"能です。これは |FABRIC_PRODUCT_NAME| が KLソースコードをターゲット上で、―性能に一切の妥協をなくすため― "
"動的にコンパイルするためです。\n |FABRIC_PRODUCT_NAME| は現在、主要なx86オペレーティングシステムをサポートし、より後半なCPUア"
"ーキテクチャについては開発中です。"

#: ..\..\source\CoreOverview\kl.rst:22
msgid "Performance"
msgstr "パフォーマンス"

#: ..\..\source\CoreOverview\kl.rst:24
msgid ""
"KL is a strongly typed language like C, and therefore can be optimized in "
"the same way during compilation. The resulting native machine code executes "
"as fast as C/C++ and is integrated into the application dynamically. A "
"benefit of dynamic compilation is that the compilation process generates "
"optimal machine code for the target CPU architecture."
msgstr ""
"KL は Cのように強く型付けされた言語であり、したがってコンパイルを通じ同じ手法で最適化がなされます。結果、ネイティブマシンコードは C/C++ "
"でのコードと同等の速度で実行され、それが動的にアプリケーションに統合されています。動的コンパイルの利点は、CPUアーキテクチャに最適なマシンコードが生成され"
"ることです。"

#: ..\..\source\CoreOverview\kl.rst:27
msgid "Security"
msgstr "セキュリティ"

#: ..\..\source\CoreOverview\kl.rst:29
msgid ""
"|FABRIC_PRODUCT_NAME| can be run in a range of client and server "
"environments. The KL language is constrained in such a way that it makes it "
"impossible for malicious applications to hijack a running application using "
"|FABRIC_PRODUCT_NAME|. This makes it safe to run |FABRIC_PRODUCT_NAME| in "
"either client-side applications or in online web services."
msgstr ""
"|FABRIC_PRODUCT_NAME| はクライアントからサーバ環境でまで実行可能です。なぜならKL言語は拘束されているので、悪意あるアプリケーションは"
" |FABRIC_PRODUCT_NAME| を使い実行中のアプリケーションをハイジャック不可能になっています。これにより "
"|FABRIC_PRODUCT_NAME| はクライアント側でも、オンライン上のウェブサービスサイドでも安全に実行できます。"

#: ..\..\source\CoreOverview\kl.rst:32
msgid "Documentation"
msgstr "ドキュメント"

#: ..\..\source\CoreOverview\kl.rst:34
msgid ""
"Complete documentation for the KL language is provided in the :ref:`KLPG`."
msgstr "KL言語の完全なドキュメントは  :ref:`KLPG` あります。"
