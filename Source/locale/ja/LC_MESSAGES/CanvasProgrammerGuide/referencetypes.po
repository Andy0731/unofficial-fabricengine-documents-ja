#
msgid ""
msgstr ""
"Project-Id-Version: Fabric Engine 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 18:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\source\CanvasProgrammerGuide\referencetypes.rst:4
msgid "Reference counted data structures"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\referencetypes.rst:6
msgid ""
"To understand the issues with reference counted data structures in Canvas "
"two things are relevant:"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\referencetypes.rst:8
msgid "KL objects, arrays and dictionaries are reference counted"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\referencetypes.rst:9
msgid "Canvas passes data between nodes without cloning"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\referencetypes.rst:11
msgid ""
"This is not a problem for simple values, such as :dfn:`Scalar` or "
":dfn:`String`, or structs such as :dfn:`Vec3` for example, because they are "
"copied. Copying a reference counted container however doesn't result in a "
"deep copy, so the referenced data won't be cloned. This means that when "
"passing KL objects or arrays through Canvas you have to be very conscious on"
" when you should use :ref:`canvas-programmer-guide-caches` or :ref:`canvas-"
"programmer-guide-variables` or :dfn:`Clone` nodes."
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\referencetypes.rst:13
msgid ""
"In the example below the array is changed even though we are not setting it "
"in the variable again. This is due to the fact that the array is reference "
"counted."
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\referencetypes.rst:17
msgid ""
"To make this graph behave as initially expected you need to add a clone "
"node. That way the array is cloned after being accessed and the original "
"array in the variable won't change."
msgstr ""
