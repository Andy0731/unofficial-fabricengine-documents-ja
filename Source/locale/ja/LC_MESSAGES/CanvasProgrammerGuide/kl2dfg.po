#
msgid ""
msgstr ""
"Project-Id-Version: Fabric Engine 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 18:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:4
msgid "KL2DFG Command line utility"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:6
msgid ""
"kl2dfg is a command line executable which allows to generate Canvas preset "
"files for a given KL extension. If successful, it creates a log file called "
":dfn:`kl2dfg.log` in the destination folder which lists the complete "
"process. To use the resulting presets in Canvas the target folder has to be "
"on the :envvar:`FABRIC_DFG_PATH` environment variable. Alternatively you can"
" also specify a subfolder for an extension to provide Canvas presets using "
"the :code:`dfgPresets` member. Please see :ref:`EAG.fpm` for more "
"information."
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:8
msgid ""
"To try out KL2DFG, simply open a shell using the Fabric environment "
"variables (see :ref:`GETTINGSTARTED_BASEINSTALLATION`), and type"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:12
msgid ""
"kl2dfg supports a series of options, which can be obtained by running kl2dfg"
" with the :dfn:`help` flag"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:16
msgid "Available options:"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:19
msgid "list"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:20
msgid ""
"Presents the user with a list of doxygen modifiers which can be used to "
"drive kl2dfg's behavior. Doxygen qualifiers can be used inside the doxygen "
"style comments of a function. For example:"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:27
msgid ""
"Will cause kl2dfg to pick a different name for the preset than the name of "
"the function. For a full list of qualifiers please use the :dfn:`list` flag."
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:32
msgid "polymorphism"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:33
msgid ""
"kl2dfg will generate only one preset for methods with the same notation "
"within an extension. For example:"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:41
msgid ""
"Would result in only one Canvas preset file, called :dfn:`Func.getMySum` "
"instead of two separate presets for :dfn:`Vec3` and :dfn:`Vec4`."
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:43
msgid ""
"You can find more information about the consequences of polymorphism here: "
":ref:`canvas-programmer-guide-polymorphism`."
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:46
msgid "inheritance"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:48
msgid "Enables the generation of presets for inherited methods. For example:"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:71
msgid "Without inheritance the presets generated would be:"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:78
msgid "With inheritance enabled the presets generated would be:"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:86
msgid ""
"can also enable this functionality on a per preset basis by using the "
":dfn:`dfgUseInheritance` doxygen qualifier."
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:89
msgid "genAllArrays"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:90
msgid ""
"Enables the generation of array presets for given methods. This makes "
"working with arrays inside of Canvas much easier. You can also enable this "
"functionality on a per preset basis by using the :dfn:`dfgCreateArrayPreset`"
" doxygen qualifier."
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:92
msgid "This functionality might be deprecated in future version of kl2dfg."
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:95
msgid "addExecutePort"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:96
msgid ""
"For easier daisy chaining of Canvas presets kl2dfg supports to add an extra "
"port as the first port of any Canvas preset. You can also enable this "
"functionality on a per preset basis by using the :dfn:`dfgAddExecutePort` "
"doxygen qualifier."
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:100
msgid "Example"
msgstr ""

#: ..\..\source\CanvasProgrammerGuide\kl2dfg.rst:101
msgid "Generating all math presets in a temporary location:"
msgstr ""
