#
msgid ""
msgstr ""
"Project-Id-Version: Fabric Engine 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 18:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\source\DCCIntegrations\SpliceAPI\intro.rst:3
msgid "Introduction"
msgstr ""

#: ..\..\source\DCCIntegrations\SpliceAPI\intro.rst:5
msgid ""
"You can find the source code for the SpliceAPI here: http://github.com"
"/fabric-engine/SpliceAPI"
msgstr ""

#: ..\..\source\DCCIntegrations\SpliceAPI\intro.rst:7
msgid ""
"The Fabric:Splice C/C++ API, referred to as :dfn:`SPLICECAPI` in this "
"document, is an abstraction layer to the `Fabric Core CAPI "
"<http://documentation.fabric-"
"engine.com/CreationPlatform/latest/HTML/CAPIProgrammingGuide/index.html>`_. "
"The SPLICEAPI provides a simpler way to integrate Fabric Core based "
"functionality into C/C++ hosts applications and wraps lots of the "
"rudimentary facilities. The :dfn:`SPLICECAPI` also supports additional "
"facilities, such as persistence, for example."
msgstr ""

#: ..\..\source\DCCIntegrations\SpliceAPI\intro.rst:9
msgid ""
"Aside from this documentation API you can find a general description of how "
"to integrate Splice into a host application here: :ref:`SPLICEINTEGRATION`. "
"This also includes recommendations for build settings and C defines."
msgstr ""

#: ..\..\source\DCCIntegrations\SpliceAPI\intro.rst:12
msgid "One API, Two Interfaces"
msgstr ""

#: ..\..\source\DCCIntegrations\SpliceAPI\intro.rst:14
msgid ""
":dfn:`SPLICECAPI` is implemented as a pure C API with a thin, inlined C++ "
"interface that makes it easier to use in C++ applications.  This is done to "
"minimize linking issues, as the C linking interface on the platforms that "
"Fabric:Splice supports is much more controlled than the C++ linking "
"interface. The C++ interface is thus purely a C++ programmer convenience; "
"however, it is a big programmer convenience, and as such it is recommended "
"that you use the C++ language interface when possible.  Both interfaces link"
" with exactly the same shared library (DLL)."
msgstr ""

#: ..\..\source\DCCIntegrations\SpliceAPI\intro.rst:16
msgid ""
"Since the host application targeted with the :dfn:`SPLICECAPI` are mainly "
"C++ based, when discussing the API in this guide, we will only present the "
"C++ version."
msgstr ""
