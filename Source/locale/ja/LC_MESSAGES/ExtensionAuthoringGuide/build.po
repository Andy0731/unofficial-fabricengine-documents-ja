#
msgid ""
msgstr ""
"Project-Id-Version: Fabric Engine 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 18:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\source\ExtensionAuthoringGuide\build.rst:2
msgid "Building the Sample Extension"
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:4
msgid ""
"To make it easy to build your first extension, the |FABRIC_PRODUCT_NAME| "
"installer automatically installs a sample extension that you should start "
"with."
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:7
msgid "Install Developer Tools"
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:9
msgid ""
"The first step is to install the appropriate developer tools for your "
"platform.  At a very minimum, you must install the C++ compiler for your "
"platform as well as the :command:`scons` build tool."
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:11
msgid "The instructions for installing developer tools vary by platform:"
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:13
msgid ""
"On Windows, install Visual Studio.  Visual Studio 2010 is the officially "
"supported version, but other versions may work as well."
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:15
msgid ""
"On Linux, installed the Clang++ or the GNU C++ compiler.  Usually this means"
" installing a package such as ``clang`` or ``g++`` (on Ubuntu)."
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:17
msgid "On OS X, install Xcode, available from the OS X app store."
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:19
msgid "Installing the :command:`scons` tool also varies by platform."
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:21
msgid ""
"On Windows, download and unpack the Zip file for Scons from from "
"http://scons.org.  Then open a command prompt, go to the directory "
"containing scons, and run :command:`python setup.py install`.  In the "
"directory :file:`c:\\Python27\\Scripts`, rename the file :file:`scons.py` to"
" :file:`scons`.  Finally, ensure that :file:`c:\\Python27\\Scripts` is in "
"your :envvar:`PATH` environment variable."
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:23
msgid ""
"On Linux, install :command:`scons` from your package manager, eg. :command"
":`apt-get install scons`"
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:25
msgid ""
"On OS X, download and unpack the Zip file for Scons from from "
"`http://scons.org/ <http://scons.org/>`_.  Then open a Terminal, go to the "
"directory containing scons, and run :command:`python setup.py install`."
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:27
msgid ""
"You can verify that :command:`scons` is installed by opening a command "
"prompt, going to an empty directory and running :command:`scons`.  You "
"should see output similar to the following:"
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:35
msgid "Copy the Sample"
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:37
msgid ""
"The next step is to make a copy of the directory containing the sample "
"extension.  The sample extension is located in the directory "
":file:`$FABRIC_DIR/EDK/Samples/HelloWorld`, where :code:`$FABRIC_DIR` is the"
" value of the :envvar:`FABRIC_DIR` environment variable that is set by the "
"installer.  Make a copy of the directory and all of its contents using, for "
"instance, the :command:`cp -r` command."
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:40
msgid "Build the Sample"
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:42
msgid ""
"From a command prompt in the directory containing your copy of the sample, "
"simply run :command:`scons`.  You should see output similar to the "
"following:"
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:56
msgid "Test the Sample"
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:58
msgid ""
"In the same directory, run :command:`python test.py`.  You should see output"
" similar to the following:"
msgstr ""

#: ..\..\source\ExtensionAuthoringGuide\build.rst:74
msgid ""
"The output shows output from KL code that calls the function in the "
"extension as well as from the extension code itself.  We will go through in "
"detail how the sample extension works in the next section."
msgstr ""
