# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2016 Fabric Software Inc
# This file is distributed under the same license as the Fabric Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Fabric Engine 2.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-12 15:40+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.3\n"

#: ../../source/DFGProgrammingGuide/api.rst:2
msgid "The DFG API"
msgstr ""

#: ../../source/DFGProgrammingGuide/api.rst:4
msgid "The DFG API can be accessed through C++ or Python."
msgstr ""

#: ../../source/DFGProgrammingGuide/api.rst:7
msgid "The C++ API"
msgstr ""

#: ../../source/DFGProgrammingGuide/api.rst:9
msgid ""
"The C++ DFG API is part of the Fabric Core API (CAPI).  To work with DFGs"
" you first obtain the DFGHost object by calling the Fabric Core client's "
"\"getDFGHost()\" method.  You can then create bindings to new graphs, "
"which return a DFGBinding object, where you can then do things like "
"addNodeFromPreset(), addPort(), connect() and so on."
msgstr ""

#: ../../source/DFGProgrammingGuide/api.rst:11
msgid ""
"Unfortunately, your best bet right now is to refer to FabricCore.h in the"
" DFG classes and also ask Helge for access to the DFG UI repositories."
msgstr ""

#: ../../source/DFGProgrammingGuide/api.rst:14
msgid "The Python API"
msgstr ""

#: ../../source/DFGProgrammingGuide/api.rst:16
msgid "The Python API is by far the simplest way to use the DFG."
msgstr ""

#: ../../source/DFGProgrammingGuide/api.rst:18
msgid ""
"In the Fabric distribution, under the Test/Core/DFG folder, you will find"
" all of our unit tests for the DFG Core API, written in Python.  You can "
"use these as a starting point for using the API."
msgstr ""

