#
msgid ""
msgstr ""
"Project-Id-Version: Fabric Engine 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 18:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\source\DependencyGraphProgrammingGuide\introduction.rst:2
msgid "Introduction"
msgstr ""

#: ..\..\source\DependencyGraphProgrammingGuide\introduction.rst:4
msgid ""
"Fabric Engine is a platform for enabling high-performance computing inside "
"of dynamic languages, running from both the command line and in graphical "
"applications such as |FABRIC_PRODUCT_NAME|.  A Fabric Engine application can"
" enable its high-performance components by creating and manipulating "
"dependency graphs and associated event graphs using the dynamic language "
"interface that Fabric Engine provides.  In many cases, such as through use "
"of |FABRIC_PRODUCT_NAME|, this work is done by a higher-level framework that"
" provides specific functionality to applications; however, in some cases it "
"may be necessary to work directly with the core of Fabric Engine to extend "
"these frameworks, create new frameworks, or to do lower level computation."
msgstr ""

#: ..\..\source\DependencyGraphProgrammingGuide\introduction.rst:6
msgid ""
"This document explains the concepts that are central to Fabric Engine's "
"dependency graph model of parallel computation, and explains in detail how "
"to work directly with this model of Fabric Engine."
msgstr ""

#: ..\..\source\DependencyGraphProgrammingGuide\introduction.rst:9
msgid "Playing with the Fabric Engine Core"
msgstr ""

#: ..\..\source\DependencyGraphProgrammingGuide\introduction.rst:11
msgid ""
"The Fabric Engine :dfn:`core` refers to the lowest-level access to Fabric "
"Engine that is available to a dynamic language, as opposed to higher-level "
"interfaces such as through |FABRIC_PRODUCT_NAME|.  The Fabric Engine core is"
" manipulated using a Python interface, and the easiest way to learn how to "
"work directly with the dependency graph is through this interface.  This can"
" be done using the |FABRIC_PRODUCT_NAME| module for Python."
msgstr ""

#: ..\..\source\DependencyGraphProgrammingGuide\introduction.rst:14
msgid "Examples"
msgstr ""

#: ..\..\source\DependencyGraphProgrammingGuide\introduction.rst:16
msgid ""
"This document includes lots of examples showing |FABRIC_PRODUCT_NAME| core "
"commands and the resulting output.  The commands are presented as if entered"
" on the Python command line:"
msgstr ""

#: ..\..\source\DependencyGraphProgrammingGuide\introduction.rst:27
msgid "The ``fabricClient`` Object"
msgstr ""

#: ..\..\source\DependencyGraphProgrammingGuide\introduction.rst:29
msgid ""
"An object (``fabricClient`` in the examples below) through which you can "
"manipulate the core can be obtained as follows in Python and Node.js:"
msgstr ""
