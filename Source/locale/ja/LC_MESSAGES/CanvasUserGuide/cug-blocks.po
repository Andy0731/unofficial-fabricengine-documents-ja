# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2016 Fabric Software Inc
# This file is distributed under the same license as the Fabric Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Fabric Engine 2.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-21 11:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.3\n"

#: ../../source/CanvasUserGuide/cug-blocks.rst:6
msgid "Blocks"
msgstr ""

#: ../../source/CanvasUserGuide/cug-blocks.rst:8
msgid ""
"Blocks are containers for user-provided code.  Using blocks, users can "
"customize the execution of complex nodes, and more advanced users can "
"create new presets whose functionality is driven by user-provided blocks."
msgstr ""
"Blocksとは、ユーザの用意したコードを、入れる器です。Blocksを使うことで、複雑なノードの実行様態をカスタマイズすることが可能です。さらには一歩踏み"
"込み、自前のblockを組み込み動作するあたらしいプリセットを作成することもできます。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:10
msgid ""
"Blocks can be used to perform operations similar to for loops in "
"traditional programming languages, but they are much more powerful that "
"just that.  Blocks can also be used to check conditions, or multiple "
"blocks can be used to do different things based on state."
msgstr ""
"Blocks を伝統的なプログラミング言語でのループと同様な操作に使用することができます。とはいえBlocksにはより強力な点があります。Blocksでは条"
"件判定に使用したり、複数のblockを状態に応じて異なる振舞をさせることができます。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:12
msgid ""
"As an example, the "
"``Fabric.Compounds.Blocks.Geometry.PolygonMesh.Deform`` preset (usually "
"accessed via the tab menu through ``PolygonMesh.Deform``), takes both a "
"``mesh`` port that is to be deformed and a ``deform`` block that is the "
"deformation itself:"
msgstr ""
"参考として ``Fabric.Compounds.Blocks.Geometry.PolygonMesh.Deform`` プリセット(タブメニューから  "
"``PolygonMesh.Deform`` としてアクセス)では、 ``mesh`` ポートと ``deform`` block の2つをとります。 "
"``deform`` ブロックは deformation そのものです:"

#: ../../source/CanvasUserGuide/cug-blocks.rst:16
msgid ""
"By shift-double-clicking the node we enter into the definition of the "
"block, more precisely referred to as the :dfn:`block instance`:"
msgstr "ノードをシフト+ダブルクリックし、blockの定義に入ります。より詳しくは以下を参照  :dfn:`block instance`:"

#: ../../source/CanvasUserGuide/cug-blocks.rst:20
msgid ""
"Inside the block instance we see its default definition; in this case, it"
" simply sets the value of the ``newPosition`` port to the value of the "
"``originalPosition`` port, i.e. doesn't actually deform anything.  "
"However, we can edit this definition to produce the deformation effect "
"that we want."
msgstr ""
"中を見ると blockインスタンスには、既定の定義があることがわかります。この場合、単に ``newPosition`` のポート値を "
"``originalPosition`` ポートへと設定しています。実際には何もデフォーム行いません。しかしここから定義に変更を加えていき、望みのデフォーム"
"効果を形作っていくことができます。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:22
msgid ""
"The block instance definition is unique to each Deform node; each Deform "
"node can potentially specify a different deformation."
msgstr ""
"blockインスタンスの定義とは、それぞれのデフォームノードに固有のものになります。つまり各デフォームノードに異なる変型を指定することができます。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:25
msgid "\"Fixed\" Block Ports"
msgstr "「固定」Blockポート"

#: ../../source/CanvasUserGuide/cug-blocks.rst:27
msgid ""
"The ports in the block instance shown with lock icons are called the "
":dfn:`fixed block ports`.  These ports are defined by the preset (in this"
" case, the ``Deform`` preset) and not by the block instance; as such, "
"they cannot be renamed, removed or reordered.  However, when the block "
"instance is executed, the preset will provide input and IO fixed ports "
"with a value to use and the preset will receive the values of IO and "
"output ports to continue its work..  In the ``Deform`` case, the "
"``originalPosition`` and ``originalNormal`` values are provided to the "
"block instance, and the block instance provides the resulting value "
"``newPosition`` back to the ``Deform`` preset."
msgstr ""
"blockインスタンスの中のポートで鍵アイコン付きのものを :dfn:`fixed block ports` "
"と呼びます。これらのポートはプリセットにより定義され（例の場合では ``Deforme`` "
"プリセット）ています。インスタンスで定義するものではありません。つまり名前の変更や追加、削除をインスタンスで行うことはできません。インスタンスが実行される時"
"、プリセットから 固定inputポート, 固定IOポートが提供されそれらのポート値を受け取り、インスタンスの仕事を続行します。 ``Deform`` "
"プリセットの例では、 ``originalPosition`` と ``originalNormal`` "
"の値がblockインスタンスに提供され、インスタンスは実行結果である ``newPosition`` を ``Deform`` プリセットに提供します。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:30
msgid "Exposing Block Ports"
msgstr "公開Blockポート"

#: ../../source/CanvasUserGuide/cug-blocks.rst:32
msgid ""
"In order to drive the functioning of the graph inside the block instance,"
" you can expose ports outside to outside of the block.  For example, we "
"might define our deformation as a simple push deformation driven by a "
"single port ``amount``:"
msgstr ""
"Blockインスタン中において、グラフを機能させるため blockの外部へとポートを外部公開することができます。たとえば、デフォメーションを  "
"``amount`` ポート一個で単純な押出変型を定義します:"

#: ../../source/CanvasUserGuide/cug-blocks.rst:36
msgid ""
"Notice the non-fixed port ``amount``; this is the exposed block port.  "
"Exposed block ports work just like regular block ports; for instance, "
"they use the same polymorphism rules (see :ref:`canvas-user-guide-"
"polymorphism`).  However, only input port can be exposed on blocks; it is"
" not possible to expose IO or output ports."
msgstr ""
"固定ポートで「ない」 ``amount`` ポートに注目してください。これが公開blockポートです。公開Blockポートは通常のblockポート同様動作し"
"ます。つまり同じ多態性についての規則 (see :ref:`canvas-user-guide-polymorphism`)"
"に従います。ただしblockでは inputポートのみを外部公開とすることができます。 IOポートやoutputポートではできません。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:38
msgid ""
"If you use the \"Back\" button to go back to the previous graph, you see "
"the exposed port:"
msgstr "\"Back\" ボタンを押し直前のグラフへと戻ると先ほど公開したポートを確認できます。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:42
msgid ""
"Notice that the ``amount`` port is now available to connect to.  You can "
"also expose new block instance ports using the block instance's header "
"menu, just as for regular node ports."
msgstr ""
"``amount`` が接続可能になっていることに着目ください。あたらしいblockインスタンスのヘッダーメニューからそのポートを作ることもできます。通常の"
"ノードのポートと一緒ですね。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:45
msgid "Looking Inside Nodes with Blocks"
msgstr "Blockのあるノードの見方"

#: ../../source/CanvasUserGuide/cug-blocks.rst:47
msgid ""
"By default, shift-double-clicking on a preset that has one or more block "
"instance will edit the block instance under the mouse (or the first block"
" instance if the top part of the node is under the mouse); this is "
"because you usually want to edit the block when you're using a preset "
"that uses blocks.  However, it is still possible to look inside the node "
"itself to see how it works; to do so, right-click on the node to see the "
"context menu, where you will find an \"Edit Node\" menu option."
msgstr ""
"素の状態では、blockインスタンスを一つ以上もつプリセットであれば、シフトを押しながらダブルクリックすることで "
"blockインスタンスを編集できます。複数ある場合はマウス直下のインスタンスの編集になり、ノードの上方であれば、はじめのインスタンスを編集します。この挙動は"
"、通常blockを用いたプリセットを使用している場合blockを編集したいであろうからです。ただし、ノード自身を見る(編集)"
"ことも可能で、右クリックからコンテキストメニューを開き \"Edit Node\" を選びます。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:50
msgid "Blocks Samples"
msgstr "Blocksのサンプル"

#: ../../source/CanvasUserGuide/cug-blocks.rst:52
msgid ""
"Fabric ships with several examples that highlight the use of blocks; they"
" can be found in the directory :file:`$FABRIC_DIR/Samples/Canvas/Blocks`."
"  It is recommended to examine how these sample scene works to better "
"understand how blocks work."
msgstr ""
"Fabric は blocksの使用法に主眼おいた多数の用例を揃えています。 :file:`$FABRIC_DIR/Samples/Canvas/Block"
"s` を御覧ください。blockがどのようなものであるかの理解するにはこれらのサンプルシーンがどのようにして機能するかを調べることをお薦めします。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:55
msgid "Blocks Presets"
msgstr "Blockプリセット"

#: ../../source/CanvasUserGuide/cug-blocks.rst:57
msgid ""
"There are several new presets that ship with Fabric that are specifically"
" for use with blocks; many of them can be found under "
"``Fabric.Compounds.Blocks`` in the Canvas Explorer window.  In addition "
"to the ``PolygonMesh.Deform`` preset mentioned above, a few other that "
"bear specific mention include:"
msgstr ""
"Fabric に同梱したプリセットには blockの利用に特化したものが多数あります。多くは ``Fabric.Compounds.Blocks`` "
"以下にあります。さらに、例に使用した ``PolygonMesh.Deform`` プリセットなど、幾つかは以下の場所にあります:"

#: ../../source/CanvasUserGuide/cug-blocks.rst:60
msgid "``Fabric.Core.Control.ForLoop``"
msgstr ""

#: ../../source/CanvasUserGuide/cug-blocks.rst:60
msgid ""
"A simple serial for loop that pulls its ``exec`` port for each iteration "
"of the loop."
msgstr "単純な直列（serial）ループです。各ループの繰り返し処理に  ``exec`` ポートを引いてきます。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:63
msgid "``Fabric.Compounds.Blocks.Array.Filter``"
msgstr ""

#: ../../source/CanvasUserGuide/cug-blocks.rst:63
msgid ""
"Filters out elements of an array based on a condition that is exposed as "
"a block."
msgstr "ある配列の要素を条件に応じて除去します。条件は block として公開されます。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:66
msgid "``Fabric.Compounds.Blocks.Array.Modify``"
msgstr ""

#: ../../source/CanvasUserGuide/cug-blocks.rst:66
msgid ""
"Creates a new array in a one-to-one fashion from an existing array.  In "
"other programming systems this operation is often referred to as \"Map\"."
msgstr "既存の配列から1対1対応したあたらしい配列を作成します。他のプログラミングシステムではこの種の操作を \"Map\" と呼ぶことがあります。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:69
msgid "``Fabric.Compounds.Blocks.Math.Accumulate``"
msgstr ""

#: ../../source/CanvasUserGuide/cug-blocks.rst:69
msgid ""
"Replaces a value with a new value for a given number of iterations.  This"
" is a very general purpose operation that can be used to create arrays, "
"sum values, etc.  In some programming systems this operation is referred "
"to as \"Fold\"."
msgstr ""
"与えた繰り返し番号に基づき、値を新しい値に置き換えます。これは配列の作成や値の集計によく用いる操作です。他のプログラミングシステムではこの種の操作を "
"\"Fold\" と呼ぶことがあります。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:72
msgid "``Fabric.Compounds.Blocks.Math.AccumulateWhile``"
msgstr ""

#: ../../source/CanvasUserGuide/cug-blocks.rst:72
msgid ""
"Like ``Fabric.Compounds.Blocks.Math.Accumulate`` except that it continues"
" only while a certain condition (exposed by a block) is true."
msgstr ""
"``Fabric.Compounds.Blocks.Math.Accumulate`` "
"とほぼ同じす。特定の条件（blockに公開）が真の間でのみ動作する点が違います。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:75
msgid "``Fabric.Compounds.Blocks.Array.AnyElementMatches``"
msgstr ""

#: ../../source/CanvasUserGuide/cug-blocks.rst:75
msgid "Tests whether any element of an array matches the test in a block."
msgstr "配列要素の中に、blockのテストにマッチするものがあるかどうかをテストします。"

#: ../../source/CanvasUserGuide/cug-blocks.rst:78
msgid "Using Blocks in Custom Graphs and Functions"
msgstr "Blockのカスタムグラフ・関数での使用"

#: ../../source/CanvasUserGuide/cug-blocks.rst:80
msgid ""
"You can use blocks in your own custom graphs and functions, either inline"
" or exposed as presets.  For more information, see :ref:`the blocks "
"section of the Canvas Programming Guide <canvas-programming-guide-"
"blocks>`"
msgstr ""
"Blockはインラインもしくは公開プリセットであろうと、ユーザ独自のカスタムグラフ・関数において使用できます。詳しくは "
":ref:`Canvasプログラミングガイドの Block についての章 <canvas-programming-guide-blocks>` "
"を参照してください。"

