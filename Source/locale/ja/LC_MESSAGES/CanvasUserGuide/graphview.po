#
msgid ""
msgstr ""
"Project-Id-Version: Fabric Engine 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 18:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\source\CanvasUserGuide\graphview.rst:4
msgid "Canvas Graph View"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:6
msgid ""
"The Fabric Canvas Graph View interface is Fabric's node based editor. It "
"lets you build graphs by adding and removing nodes, defining connections "
"between them and creating new, custom nodes that contain either a sub-graph,"
" KL code or a combination of both."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:8
msgid ""
"Canvas is available in all Fabric integrations, including Fabric Standalone,"
" and the way you work with it is the same no matter which host application "
"you use."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:11
msgid "Creating nodes"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:13
msgid "Nodes can be created in several ways."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:15
msgid ""
"Preset Tree: Look for the node you want to create in the preset tree. It "
"provides access to all Fabric factory presets, as well as any presets found "
"in the directories on the :envvar:`FABRIC_DFG_PATH` environment variable. "
"Drag the preset you want to instantiate as a node into the graph view to "
"create a node."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:16
msgid ""
"Tab Search: When focusing the graph view, hit the :dfn:`TAB` key to bring up"
" the smart search. Then type the name of a part of the name of the preset "
"you want to instantiate. For example try :dfn:`Math.Vec3.ComposeVec3` or "
":dfn:`MaVComp`."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:17
msgid ""
"Context menu: Special nodes, such as backdrops, empty graph nodes and "
"function nodes can be created by right-clicking into Canvas and then "
"choosing the respective entry of the context menu."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:23
msgid ""
"Certain nodes can not be found using the type and the method name, for "
"example :dfn:`Vec3.unit` does not exist, but you can find it looking for "
":dfn:`Math.unit`. The reason for this is that the preset is "
":ref:`polymorphic  <canvas-user-guide-polymorphism>`, and supports multiple "
"types."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:26
msgid "Node UI features"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:30
msgid "Nodes in Canvas provide a series of features through the UI:"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:32
msgid "Collapse Button"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:34
msgid ""
"Each node can be collapsed by clicking on the small icon on the right of the"
" header of the node. You can cycle through three states"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:37
msgid "Show all ports"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:38
msgid "Show only connected ports"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:39
msgid "Show no ports"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:41
msgid ""
"You can also collapse all the selected nodes at a specific state by "
"respectively pressing 1, 2 or 3."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:43
msgid "Header Ports"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:45
msgid ""
"All ports of a node can be accessed by clicking on the header ports next to "
"the node label. This is especially useful when the node is currently "
"collapsed."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:47
msgid "Relaxation"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:49
msgid ""
"If you press Ctrl+R hotkey with a node selected, an automatic layout will be"
" applied to all its children nodes."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:54
msgid "Zoom"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:56
msgid ""
"If you press A hotkey, the view is framed so all the nodes are visible. If "
"you press F hotkey, the view is framed on the current selected nodes."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:59
msgid "Editing"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:61
msgid ""
"If you shift and double click over a node you will jump inside it. This will"
" either show you the subgraph contained in the node, or the KL function "
"defining the node. For more information on subgraphs and custom KL nodes see"
" the sections further down on this page."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:65
msgid ""
"You can daisy chain inputs as well. To get to the daisy chain port of an "
"input, just hover the right side of a node and it will show up."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:69
msgid "Connecting nodes"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:73
msgid ""
"You can connect nodes by clicking and dragging in a port. You can also shift"
" click on a port to connect to multiple ports sequentially. Additionally you"
" can use the header ports to get access to all ports of a node, even if the "
"node is currently collapsed."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:77
msgid ""
"You may only connect ports which are compatible. If you try to connect "
"incompatible ports a tooltip will explain the reason for connection failure."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:80
msgid "Exposing ports"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:82
msgid ""
"To make ports available to either the host application or the node hosting a"
" subgraph, ports can be exposed. There are several ways to expose a port."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:84
msgid ""
"Right click on the side panel and choose :dfn:`Create port`. In the dialog "
"you can then choose the respective name and, if you are creating the port on"
" the top level graph, the data type of the port. If the data type is part of"
" a specific extension, you should add the name of that extension in the "
":dfn:`advanced -> extension` field."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:86
msgid ""
"Connect the black :dfn:`Expose` port from either side panel to a port on a "
"node. This will create the right exposed port and also connect it as well."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:91
msgid "Port options"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:93
msgid ""
"When doing :dfn:`Create port` or :dfn:`Edit port`, additional port options "
"can be specified by expanding the `metadata` section."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:95
msgid ""
"The :dfn:`visibility` combo box specifies how the port should be exposed to "
"the host application (such as Maya)."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:97
msgid ""
"`normal`: the port value should be mapped and converted, if possible, to "
"host application's data type (attribute)"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:99
msgid ""
"`opaque`: the port value should be handled as an opaque data type by the "
"host application, which can allow to transport KL volatile objects between "
"different host's graphs"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:101
msgid "`hidden`: the port should be unkown by the host application"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:103
msgid ""
"The :dfn:`persist value` checkbox is only available for top level graphs. "
"When checked, it indicates that the port value must be persisted (saved) "
"with the graph, else re-loading the graph will reset the value to its "
"default. See :ref:`canvas-programmer-guide-valuepersistance` for technical "
"details about value persistance."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:105
msgid ""
"The option is automatically set for edited values, or simple types reflected"
" in the host application when in Maya or Softimage."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:107
msgid ""
"The :dfn:`use range` checkbox allows to specify a range for UI value editing"
" purposes (value is not clamped at runtime)"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:109
msgid ""
"The :dfn:`use combo` checkbox allows to set a list of combo box items for "
"the UI, that will be mapped to 0..N-1 values"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:111
msgid ""
"Port dialogs for the top level graph may offer additional features in a "
"specific host application, such as Maya, for example."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:114
msgid "Execute ports"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:116
msgid ""
"Some nodes may offer a special port, called the :dfn:`Execute` port. It "
"doesn't carry any data, it purely exist to allow daisy chaining of certain "
"nodes. You can use it with the :dfn:`Execute.Merge` nodes, to describe a "
"data flow. Please see :ref:`canvas-programmer-guide-kl2dfg` in the "
"programmer guide for more information."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:119
msgid "Subgraphs"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:121
msgid ""
"You can create subgraphs by right clicking on the empty space in a graph "
"view and choosing :dfn:`New empty graph`. This will create a new node which "
"contains a subgraph. To edit the subgraph, shift-double click the node or "
"use its context menu and choose :dfn:`Edit`. You can leave the subgraph "
"again by clicking on the :dfn:`Go up` button on the top right."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:126
msgid "Imploding / exploding subgraphs"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:128
msgid ""
"A selection of nodes can be imploded into a new subgraph. For this, right "
"click on a selection of nodes and choose :dfn:`Implode`. This will create a "
"new node with a subgraph containing the selection of nodes. Any existing "
"connections will be kept, and ports going into the subgraph will be exposed "
"automatically."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:130
msgid ""
"With a subgraph node selected you can also perform the opposite operation: "
"Explode. This will remove the subgraph node but insert all of its contained "
"nodes into the current graph, maintaining all existing connections."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:133
msgid "Copy and paste"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:134
msgid ""
"You can copy and paste nodes within Canvas using the system specific "
"keyboard shortcuts. Canvas saves selected nodes or graphs as text to the "
"system clipboard. The encoded JSON text can also be pasted into other "
"applications, text editors or other open Canvas environments. This allows to"
" directly copy and paste graphs between different DCCs."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:137
msgid "Saving / exporting presets"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:138
msgid ""
"Canvas nodes not attached to a preset are called :dfn:`inlined` nodes. They "
"are saved with the graph which contains them. You can identify inlined nodes"
" by their italic title as well as the :dfn:`*` in the header."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:142
msgid ""
"Canvas nodes can be saved to disk in two ways. Exporting a node to an "
"external file can be done by right-clicking any node and choosing "
":dfn:`Export graph`. This is useful if you want to share a preset with other"
" users or upload it to a server, for example. This will NOT make the preset "
"available to your canvas session however. Exporting a graph will retain the "
"current types and values of the inputs."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:144
msgid ""
"Alternatively you can also create a preset out of any node. You can only "
"create presets in directories on the :envvar:`FABRIC_DFG_PATH` environment "
"variable. By default this contains the Fabric Engine factory installation "
"folder (where you are not allowed to create presets) and a user folder below"
" your system user's home folder."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:146
msgid ""
"To create a preset out of a node, right-click the node and choose "
":dfn:`Create preset`."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:150
msgid ""
"Pick the location where to create the preset. Note that you can also create "
"new folders below any writable directory (not below the Fabric Engine "
"factory installation path) by right-clicking the parent folder. Choose a "
"folder and a name and hit :dfn:`Ok`. Now the node reflects the change by "
"using a normal title font as well as missing the :dfn:`*` indicator."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:152
msgid ""
"You can also now create the node once more by using the name of the folder "
"and the node name in the smart search."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:157
msgid "Custom KL nodes"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:159
msgid ""
"Canvas nodes can also contain a KL function. To create a KL function node "
"right click on the empty space of the graph view and choose :dfn:`New empty "
"function`. To edit the KL function shift-double click the node or use its "
"context menu and choose :dfn:`Edit`. To learn more about custom KL function,"
" please see :ref:`canvas-programmer-guide-klfunctioneditor` in the "
"programming guide."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:162
msgid "Backdrops"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:164
msgid ""
"Backdrops are special nodes which can be used to organize your work space. "
"To create a backdrop right click the empty space in a graph view and choose "
":dfn:`New backdrop`. You can resize a backdrop by dragging on its corners. "
"You can also change the backdrops color by right clicking it and choosing "
":dfn:`Properties`. Backdrops also will move the nodes contained in them. "
"Just layout a node inside of the backdrop and then move the backdrop itself."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:169
msgid "Comments"
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:171
msgid ""
"Any node in Canvas can contain comments. This is especially useful for users"
" not familiar with a saved graph authored by someone else. You can add a "
"comment by right clicking any node and choosing :dfn:`Set comment`. Likewise"
" comments can be removed choosing :dfn:`Remove comment`. You can edit an "
"existing comment by double clicking on it. Additionally you can collapse the"
" comment by right clicking on it. Double clicking the yellow sticker brings "
"it back up."
msgstr ""

#: ..\..\source\CanvasUserGuide\graphview.rst:175
msgid ""
"Comments can also be attached to Backdrops, which is useful to describe a "
"whole section of nodes."
msgstr ""
