#
msgid ""
msgstr ""
"Project-Id-Version: Fabric Engine 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-06 18:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\source\KLProgrammingGuide\syntax.rst:4
msgid "KL Syntax"
msgstr "KLの文法"

#: ..\..\source\KLProgrammingGuide\syntax.rst:6
msgid ""
"When KL was developed it was designed to have a syntax as close as possible "
"to JavaScript, which itself is what is referred to as a *C-like language* "
"(as far as syntax is concerned).  This chapter goes into the details of KL "
"syntax, and can act as a reference for you if you are not familiar with "
"C-like languages.  On the other hand, if you are already familiar with the "
"syntax of JavaScript and/or C, we recommend that you skip this chapter and "
"move on to the next."
msgstr ""
"KLが開発された当初、可能な限り JavaScriptのシンタックスを模倣するよう設計しました。JavaScript自体は *C-like "
"language* をシンタックスはともかく参照しています。この節ではKLの文法を詳細に掘り下げます。C言語に親しんでいない場合、レファレンスとなることでし"
"ょう。一方、もし既に JavaScript and/or C言語 に詳しいのであれば、この節はスキップし、ガイドの続きへ進むことをお薦めします。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:8
msgid "Some of the key characteristics of C-like languages are:"
msgstr "Cライクな言語の特徴："

#: ..\..\source\KLProgrammingGuide\syntax.rst:10
msgid "Programs are plain, human-readable text files."
msgstr "プログラムは人間可読なプレーンテキストです。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:12
msgid ""
"A program is a sequence of :index:`tokens <single: token>`.  There are four "
"major types of tokens: keywords, identifiers, symbols and constants."
msgstr ""
"プログラムは一連の :index:`tokens <single: token>` から成ります。トークンには4つの構成要素があります。 "
"キーワード（keywords） 、識別子（identifiers）, シンボル（symbols）、定数（constants）"

#: ..\..\source\KLProgrammingGuide\syntax.rst:14
msgid ""
"Tokens may be separated by arbitrary whitespace and **must** be separated by"
" whitespace in the case that it would make two adjacent tokens appear to be "
"a single, different token.  By whitespace, we mean spaces (ASCII 32), "
"newlines (ASCII 10), tabs (ASCII 9), carriage returns (ASCII 13) and "
"vertical tabs (ASCII 11)."
msgstr ""
"トークンは任意の個数のホワイトスペースで区切ります。2つの隣接するトークン同士は、それぞれ個別に見えるようにスペースで分割しなければなりません。「ホワイトス"
"ペースによる」とは スペース（ASCII 32）、改行 \\n（ASCII 10）、タブ（ASCII 9）、キャリッジ・リターン \\r（ASCII "
"13）、ヴァーティカルタブ（ASCII 11）を意味します。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:16
msgid ""
"Programs can contain comments anywhere and comments are treated like "
"whitespace when the program is processed by the computer.  There are two "
"types of comments: block comments, which begin with ``/*`` and end with "
"``*/``, and line comments, which begin with ``//`` and continue to the next "
"newline (ASCII 10)."
msgstr ""
"プログラムにはどこにでもコメントを付することができます。コメントはコンピュータでの処理の際、ホワイトスペースと同じように扱われます。2つのコメント方法があり"
"ます。 ブロックコメント、 ``/*`` で始まり次ので終わり ``*/`` 。そして行コメント ``//`` で始まり次の改行コード（\\n ASCII "
"10）まで続きます。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:18
msgid "Blocks are delimited by ``{`` and ``}``"
msgstr "ブロックは ``{`` と ``}`` により分割されます。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:20
msgid "Statements are terminated with ``;``"
msgstr "文（statement）は ``;`` で終端です。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:22
msgid "We delve into some more details of the KL syntax below."
msgstr "次にKLシンタックスの詳細を掘り下げます。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:32
msgid "Encoding"
msgstr "エンコーディング"

#: ..\..\source\KLProgrammingGuide\syntax.rst:34
msgid ""
"Although KL programs are plain, human-readable text files, KL does specify "
"an encoding for the text files: UTF-8.  The KL compiler assumes that all KL "
"source code is encoded as UTF-8 without any encoding marks.  KL programs "
"which contain invalid UTF-8 sequences cannot be compiled and will result in "
"syntax errors."
msgstr ""
"KLプログラムは人間可読なプレインテキストですが、KLではテキストファイルのエンコーディングを UTF-8 "
"に限ります。KLコンパイラは全てのソースコードを エンコーディングマーク無しの UTF-8とみなします。KLプログラムではコードに不正なUTF-8シーケンス"
"が含まれていると、コンパイルできずシンタックスエラーが返ります。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:36
msgid ""
"If you don't understand exactly what this means, don't worry: plain 7-bit "
"ASCII text files, such as used for C source code (and often for JavaScript "
"source code) are by default UTF-8 encoded.  The only thing to keep in mind "
"is that text files saved on Windows in \"Unicode format\" (which technically"
" means they are encoded as UCS-2) cannot be read by the KL compiler.  If you"
" want to insert foreign language characters into a KL source file you must "
"use an editor that can write UTF-8 files."
msgstr ""
"これの意味するところがわからないのであっても、C言語でのソースコード（あるいはJavaScript）"
"がそうであるようにプレイン7ビットASCIIテキストであれば、UTF-8ディフォルトエンコードです。１つ注意すべき点があり、Windowsで "
"\"Unicode format\" として保存 (実際には UCS-2 としてエンコードされる) "
"されたテキストファイルは、KLコンパイラでは読み込めません。アルファベット以外の外国語をKLソースコードに混入させるときには、エディタの設定で UTF-8 "
"を必ず使いましょう。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:38
msgid ""
"The benefit of specifying an encoding is that high-bit characters, such as "
"foreign language characters, can be inserted directly into string constants "
"in KL source files."
msgstr "エンコードを特定することの利点は、外国語で使用される高ビットの文字を、KLソースファイル中に文字列定数として直接挿入できることです。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:44
msgid "Line Continuations"
msgstr "行の連続性"

#: ..\..\source\KLProgrammingGuide\syntax.rst:46
msgid ""
"Like C, any line of a KL program that ends with a ``\\`` (backslash) "
"character causes the line to be joined with the next line.  This is useful "
"for breaking long lines into multiple lines when a single token needs to be "
"split; usually this token would be a long string."
msgstr ""
"C言語同様、KLプログラム中のバックスラッシュ文字  ``\\`` で終わる行は、その次の行と連結されます。単独トークンを分割するときなど、長くなってしまう"
"行を複数の行に分割でき便利です。たとえば長い文字列などのトークンです。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:48
msgid "This example shows the use of line continuations in a KL source file:"
msgstr "このサンプルではKLソース・ファイル中での文字列連結使用例です。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:65
msgid "Comments"
msgstr "コメント"

#: ..\..\source\KLProgrammingGuide\syntax.rst:67
msgid ""
"KL supports the same two types of comments as C and JavaScript: block "
"comments and line comments."
msgstr "KLはC言語やJavaScriptと同じ２つのコメント法をサポートします。ブロックコメントと行コメントです。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:73
msgid "Block Comments"
msgstr "ブロックコメント"

#: ..\..\source\KLProgrammingGuide\syntax.rst:75
msgid ""
"A block comment in KL is an arbitrary sequence of characters that begins "
"with the characters ``/*`` and ends with the characters ``*/``.  Like C, KL "
"ends a block comment as soon as it encounters the first sequence ``*/``.  "
"Also like C, KL does not recognize nested comments."
msgstr ""
"ブロックコメントは、任意の、 ``/*`` ではじまる次ので終わる ``*/`` 連続した文字の連なりにより構成されます。C言語同様、KLのブロックコメント"
"は ``*/`` がきたら即コメント終端とみなします。また同様にネストしたブロックコメントを認識しません。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:77
msgid "The following example illustrates acceptable block comments in KL:"
msgstr "KLで受け付ける例："

#: ..\..\source\KLProgrammingGuide\syntax.rst:98
msgid "The following example unacceptable (erroneous) block comments in KL:"
msgstr "KLでは無効な例："

#: ..\..\source\KLProgrammingGuide\syntax.rst:118
msgid ""
"Be careful with block comments; if either of the errors of the type given "
"above occur in your program it can be very difficult to figure out what has "
"gone wrong; the syntax errors you are given will seem to have nothing to do "
"with your program.  For this reason, we recommend that you use line "
"comments, which are described next."
msgstr ""
"ブロックコメントを使用する際の注意点：プログラム中、以上のエラーが発生すると問題の原因解明が非常に困難になります。このため行コメントの使用をお薦めします。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:124
msgid "Line Comments"
msgstr "行コメント"

#: ..\..\source\KLProgrammingGuide\syntax.rst:126
msgid ""
"A line comment in KL begins with the character sequence ``//`` and continues"
" until the end of the line (ASCII character 10).  Unlike block comments, "
"there are no \"gotchas\" with line comments: they work exactly as expected."
"  However, they can't be used to comment out sections of code in the middle "
"of a line."
msgstr ""
"行コメントは、 ``//`` で始まり行の終端、つまり改行コード(ASCII character "
"10）まで続く文字の連なりです。ブロックコメントと違い、行コメントでは「落とし穴」はありません。期待通りに動作することでしょう。ただ行の途中で、コードのセク"
"ションをコメントアウトすることはできません"

#: ..\..\source\KLProgrammingGuide\syntax.rst:128
msgid "The following example illustrates the use of line comments in KL:"
msgstr "KLでの行コメントの例："

#: ..\..\source\KLProgrammingGuide\syntax.rst:149
msgid "Tokens"
msgstr "トークン"

#: ..\..\source\KLProgrammingGuide\syntax.rst:151
msgid ""
"A KL program is *parsed* as a sequence of tokens.  A token is a sequence of "
"characters that begins with something other than whitespace and is not a "
"comment.  There are four categories of tokens in KL: keywords, identifiers, "
"symbols, and constants."
msgstr ""
"KLプログラムはトークンの連なりとして *パース* されます。トークンとは、コメントや、ホワイトスペースではない何らかの文字の連なりです。トークンには以下の"
"４つのカテゴリがあります。キーワード（keywords）, 識別子（identifiers）, シンボル（symbols）定数（constants）"

#: ..\..\source\KLProgrammingGuide\syntax.rst:157
msgid "Keywords"
msgstr "キーワード"

#: ..\..\source\KLProgrammingGuide\syntax.rst:159
msgid "The following is the list of all the keywords in KL:"
msgstr "KLでの全キーワードのリスト："

#: ..\..\source\KLProgrammingGuide\syntax.rst:164
msgid "``alias``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:165
msgid "``break``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:166
msgid "``case``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:167
msgid "``const``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:168
msgid "``continue``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:169
msgid "``default``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:170
msgid "``do``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:171
msgid "``else``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:172
msgid "``false``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:173
msgid "``FILE``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:174
msgid "``for``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:175
msgid "``FUNC``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:176
msgid "``function``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:177
msgid "``if``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:178
msgid "``in``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:179
msgid "``inline``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:180
msgid "``io``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:181
msgid "``LINE``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:182
msgid "``object``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:183
msgid "``operator``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:184
msgid "``require``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:185
msgid "``return``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:186
msgid "``struct``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:187
msgid "``switch``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:188
msgid "``true``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:189
msgid "``var``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:190
msgid "``while``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:192
msgid ""
"Keywords cannot be used as identifiers, ie. cannot be used for variable, "
"parameter, function, constant or type names."
msgstr "キーワードは識別子として使用することはできません。すなわち、以下の名前に使用することはできません。変数、パラメータ、関数、定数、型の名前です。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:198
msgid "Identifiers"
msgstr "識別子"

#: ..\..\source\KLProgrammingGuide\syntax.rst:200
msgid ":dfn:`Identifiers` are a sequence of one or more characters that:"
msgstr ":dfn:`Identifiers` とは、文字１つかそれ以上の連なりから成ります："

#: ..\..\source\KLProgrammingGuide\syntax.rst:202
msgid "begin with any of the characters ``a...z``, ``A...Z`` or ``_``; and"
msgstr "``a...z``, ``A...Z``, ``_`` などの文字から始まり、"

#: ..\..\source\KLProgrammingGuide\syntax.rst:203
msgid ""
"are followed by zero or more of the characters ``a...z``, ``A...Z``, "
"``0...9`` or ``_``"
msgstr "次の文字0個以上つづきます。 ``a...z``, ``A...Z``, ``0...9`` or ``_``"

#: ..\..\source\KLProgrammingGuide\syntax.rst:205
msgid ""
"Identifiers are used in KL for variable names, parameter names, function "
"names, constant names, method names and type names."
msgstr "識別子は、KLでの変数の名前、パラメータの名前、関数の名前、定数の名前、メソッドの名前、型の名前に使用します。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:207
msgid ""
"The built-in base types in KL (eg. ``Boolean``, ``String``, ``Float32``) are"
" not keywords but rather identifiers.  This is a technical detail that is "
"important in the design of the language grammar but doesn't make much "
"difference in practice; it simply changes certain syntax errors into "
"semantic errors."
msgstr ""
"KLでの組み込み型（例： ``Boolean``, ``String``, ``Float32`` "
"）はキーワードではなく、識別子です。このことは言語設計の技術的詳細として重要ではありますが、実際にはあまり違いはありません。違いといえばシンタックスエラーの"
"かわりにセマンティクスエラーがでる程度です。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:209
msgid "Some examples of valid identifiers in KL:"
msgstr "正常な識別子の例："

#: ..\..\source\KLProgrammingGuide\syntax.rst:211
msgid "``foo``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:212
msgid "``someVariable``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:213
msgid "``MyType``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:214
msgid "``MyTypeVersion2``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:215
msgid "``variable_with_underscores``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:216
msgid "``piBy2``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:217
msgid "``_``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:219
msgid "Some examples of invalid identifiers:"
msgstr "だめな識別子の例："

#: ..\..\source\KLProgrammingGuide\syntax.rst:221
msgid "``2by4``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:222
msgid "``my%Share``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:228
msgid "Symbols"
msgstr "シンボル"

#: ..\..\source\KLProgrammingGuide\syntax.rst:230
msgid ""
"A small set of non-alphanumeric, non-underscore characters or short "
"sequences of such characters are the :dfn:`symbols` in KL.  They are "
"specifically:"
msgstr "KLにおける :dfn:`symbols` とは、英数字以外の、アンダースコアを含まない文字（もしくはそれらの短いセット）です。具体的には："

#: ..\..\source\KLProgrammingGuide\syntax.rst:235
msgid "``=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:236
msgid "``==``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:237
msgid "``===``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:238
msgid "``+``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:239
msgid "``+=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:240
msgid "``++``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:241
msgid "``-``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:242
msgid "``-=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:243
msgid "``--``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:244
msgid "``*``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:245
msgid "``*=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:246
msgid "``/``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:247
msgid "``/=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:248
msgid "``%``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:249
msgid "``%=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:250
msgid "``^``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:251
msgid "``^=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:252
msgid "``^^``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:253
msgid "``&``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:254
msgid "``&=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:255
msgid "``&&``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:256
msgid "``|``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:257
msgid "``|=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:258
msgid "``||``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:259
msgid "``[``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:260
msgid "``[]``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:261
msgid "``]``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:262
msgid "``(``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:263
msgid "``)``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:264
msgid "``{``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:265
msgid "``}``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:266
#: ..\..\source\KLProgrammingGuide\syntax.rst:285
msgid "``;``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:267
msgid "``.``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:268
msgid "``<``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:269
msgid "``<=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:270
msgid "``<<``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:271
msgid "``<<=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:272
msgid "``<<<``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:273
msgid "``<>``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:274
msgid "``>``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:275
msgid "``>=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:276
msgid "``>>``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:277
msgid "``>>=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:278
msgid "``>>>``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:279
msgid "``~``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:280
msgid "``!``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:281
msgid "``!=``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:282
msgid "``!==``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:283
msgid "``,``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:284
msgid "``?``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:286
msgid "``#``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:288
msgid ""
"The KL compiler is \"greedy\" when looking for symbols: it looks for the "
"longest sequence of characters that are a valid symbol.  This is why ``==(``"
" is treated as the two symbols ``==`` and ``(``: there is no symbol starting"
" with ``==(`` but ``==`` is a symbol."
msgstr ""
"KLコンパイラは、シンボル走査に \"貪欲\" です。文字の最長シーケンスを有効なシンボルとして解釈します。 ``==(`` が ``==`` と "
"``(`` の２つのシンボルとして扱われる理由です。``==(`` ではじまるシンボルは存在せず、 ``==`` ではじまるシンボルは存在します。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:296
msgid "Constants"
msgstr "定数"

# 4つしかないんだけどどういうことなの
#: ..\..\source\KLProgrammingGuide\syntax.rst:298
msgid ""
"A constant is a token that is interpreted as a fixed value of a specific "
"type. KL supports five types of constants: boolean constants, integer "
"constants, floating-point constants, and string constants.  Each of these "
"are explained below."
msgstr ""
"定数とは、特定の型の固定された値として解釈されるトークンです。KLでは5つの型の定数をサポートします：真偽値（boolean）, 整数（integer）, "
"浮動小数点数（floating-point）, 文字列（string） です。それぞれいかに説明します。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:304
msgid "Boolean Constants"
msgstr "真偽値定数"

#: ..\..\source\KLProgrammingGuide\syntax.rst:306
msgid ""
"The two keywords ``true`` and ``false`` are the two :dfn:`boolean "
"constants`.  They are each a value of type ``Boolean``."
msgstr ""
"``true`` と ``false`` の２つのキーワードが２つの :dfn:`boolean constants` です。どちらも "
"``Boolean`` 型の値です。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:329
msgid "Integer Constants"
msgstr "整数定数"

#: ..\..\source\KLProgrammingGuide\syntax.rst:331
msgid "An :dfn:`integer constant` can take one of three forms:"
msgstr ":dfn:`integer constant` の3つの形態:"

#: ..\..\source\KLProgrammingGuide\syntax.rst:333
msgid "The single digit ``0``"
msgstr "一桁の ``0``"

#: ..\..\source\KLProgrammingGuide\syntax.rst:334
msgid ""
"A decimal constant that starts with a single digit in the range ``1...9`` "
"followed by zero or more digits in the range ``0...9``"
msgstr "``1...9`` の一桁から始まり、ゼロ桁以上の ``0...9`` が続く10進定数"

#: ..\..\source\KLProgrammingGuide\syntax.rst:335
msgid ""
"The two characters ``0x`` or ``0X`` followed by one or more characters in "
"one of the ranges ``0...9``, ``a...f`` and ``A...F``"
msgstr ""
"``0x`` もしくは ``0X`` とそれに1つ以上の ``0...9``, ``a...f`` and ``A...F`` の文字が続く16進定数"

#: ..\..\source\KLProgrammingGuide\syntax.rst:337
msgid ""
"In all cases, an integer constant may be optionally followed by an integer "
"type specification.  An integer type specification specified the "
"signededness and bit width of the integer and takes the form"
msgstr ""
"どの形態であれ、整数定数では必要に応じ整数型の型の指定を行えます。整数型の指定では、符号（signededness）"
"の可否、ビット長の指定、どの形態かについて指定します。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:339
msgid "The character ``s`` (signed) or the character ``u``, followed by:"
msgstr "``s`` (signed) もしくは ``u`` (unsigned)に続けて、"

#: ..\..\source\KLProgrammingGuide\syntax.rst:340
msgid "(optionally) ``8``, ``16``, ``32`` or ``64`` (the bit width)"
msgstr "(任意) ``8``, ``16``, ``32`` or ``64`` (ビット幅)"

#: ..\..\source\KLProgrammingGuide\syntax.rst:342
msgid ""
"If no bit width is provided in the type specification the integer is 32-bit."
"  So, for example, ``145u`` is an unsigned 32-bit integer constant and "
"``78s`` is a signed 32-bit integer constant."
msgstr ""
"ビット幅を指定しない場合、整数のビット幅は 32-bit です。なので、 ``145u`` は unsigned 32-bit 整数定数で ``78s`` "
"は signed 32-bit 整数定数を意味します。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:344
msgid ""
"If no type specification is provided at all the integer is signed 32-bit.  "
"For example, ``5421`` is a signed 32-bit integer constant."
msgstr "型の指定がない場合、整数は signed 32-bitになります。なので ``5421`` は signed 32-bit 整数定数です。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:363
msgid "Floating-Point Constants"
msgstr "浮動小数点数定数"

#: ..\..\source\KLProgrammingGuide\syntax.rst:365
msgid ""
"A :dfn:`floating-point constant` in KL is either of type ``Float32`` or type"
" ``Float64``.  The syntax follows closely that of C/C++, with ``Float32`` "
"corresponding to the C type ``float`` and ``Float64`` corresponding to the C"
" type ``double``:"
msgstr ""
"KLの :dfn:`floating-point constant` は ``Float32`` と ``Float64`` "
"の2つの型があります。シンタックスは C/C++ に非常に近く ``Float32`` は C での ``float`` を意味し ``Float64`` "
"は C での ``double`` 型："

#: ..\..\source\KLProgrammingGuide\syntax.rst:367
msgid "``1.2`` is of type ``Float64``"
msgstr "``1.2`` は ``Float64`` 型"

#: ..\..\source\KLProgrammingGuide\syntax.rst:368
msgid "``1.2f`` is of type ``Float32``"
msgstr "``1.2f`` は ``Float32`` 型"

#: ..\..\source\KLProgrammingGuide\syntax.rst:369
msgid "``.7`` is of type ``Float64``"
msgstr "``.7`` は ``Float64`` 型"

#: ..\..\source\KLProgrammingGuide\syntax.rst:370
msgid "``3.4e7`` and ``3.4e+7`` are of type ``Float64``"
msgstr "``3.4e7`` や ``3.4e+7`` は ``Float64`` 型"

#: ..\..\source\KLProgrammingGuide\syntax.rst:371
msgid "``3.4e7f`` and ``3.4e+7f`` are of type ``Float32``"
msgstr "``3.4e7f`` や ``3.4e+7f`` は ``Float32`` 型"

#: ..\..\source\KLProgrammingGuide\syntax.rst:372
msgid "``.5e-4f`` is of type ``Float32``"
msgstr "``.5e-4f`` は ``Float32`` 型"

#: ..\..\source\KLProgrammingGuide\syntax.rst:374
msgid ""
"KL extends the C/C++ syntax by allowing more explicit specification of the "
"type using the ``f32`` and ``f64`` suffixes.  For example:"
msgstr ""
"KLは C/C++ のシンタックスをさらに拡張し、``f32`` and ``f64`` を接尾語として使うことでより明示的な型の指定を可能にします。例："

#: ..\..\source\KLProgrammingGuide\syntax.rst:376
msgid "``4.5e-6f32`` is the same as ``4.5e-6f``"
msgstr "``4.5e-6f32`` は ``4.5e-6f`` と同じ"

#: ..\..\source\KLProgrammingGuide\syntax.rst:377
msgid "``2.874f64`` is the same as ``2.873``"
msgstr "``2.874f64`` は ``2.873`` 同じ"

#: ..\..\source\KLProgrammingGuide\syntax.rst:379
msgid ""
"If none of the ``f``, ``f32`` or ``f64`` suffixes are present then the "
"floating-point constant is an :dfn:`untyped floating-point constant`.  An "
"untyped floating-point constant automatically inherits the type of its "
"surrounding expression.  For instance, if the floating-point constant ``.5``"
" is added to a variable of type ``Float32`` then the constant is treated as "
"having type ``Float32``."
msgstr ""
"``f``, ``f32`` も ``f64`` も接尾語に使われていない場合、浮動小数点数定数は :dfn:`untyped "
"floating-point constant` になります。untyped floating-point 定数は自動的にその周囲の式の型を継承します。 "
"例えば, 浮動小数点数定数 ``.5`` が ``Float32`` 型の変数に加算されるとその定数は ``Float32`` であるとして扱われます。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:413
msgid ""
"It is not possible to represent many decimal fractional expressions in IEEE "
"floating point format.  As such, do not be surprised if the output values of"
" such expressions appear to be slightly off, as seen in the example above "
"with the constant ``.12e20f32``."
msgstr ""
"IEEE浮動小数点形式では、ほとんどの少数や分数の式を表現することはできません。ですのでそのような式で出力された値が、多少ずれているように見えたとしても驚い"
"てはいけません。上記の例では定数 ``.12e20f32`` など。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:421
msgid "String Constants"
msgstr "文字列定数"

#: ..\..\source\KLProgrammingGuide\syntax.rst:423
msgid ""
"A :dfn:`string constant` is a constant value of type ``String``.  It takes "
"one of the following forms:"
msgstr ":dfn:`string constant` とは ``String`` 型の定数値です。とりうる2つの形態:"

#: ..\..\source\KLProgrammingGuide\syntax.rst:425
msgid ""
"A sequence of characters, possibly including string constant escape "
"sequences (described below), enclosed in a pair of ``\"`` (double-quote) "
"characters; or"
msgstr "文字の連なり。 ２つの ``\"`` (ダブルクォート)文字で囲われた、文字列定数のエスケープシーケンス（後述）を含む"

#: ..\..\source\KLProgrammingGuide\syntax.rst:427
msgid ""
"A sequence of characters, possibly including string constant escape "
"sequences (described below), enclosed in a pair of ``'`` (single-quote) "
"characters; or"
msgstr "文字の連なり。２つの ``'`` (シングルクォート)文字で囲われた、文字列定数のエスケープシーケンス（後述）を含む"

#: ..\..\source\KLProgrammingGuide\syntax.rst:429
msgid ""
"A :dfn:`string constant escape sequence` is one of the following sequences "
"of characters, describing what the sequence is replaced by in the string:"
msgstr ":dfn:`string constant escape sequence` とは以下の、文字列に置き換えられる文字の連なりです。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:431
msgid "``\\n``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:432
msgid "a single newline (ASCII 10) character"
msgstr "単一の改行文字（ASCII 10）"

#: ..\..\source\KLProgrammingGuide\syntax.rst:433
msgid "``\\f``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:434
msgid "a single form feed (ASCII 12) character"
msgstr "単一フォームフィード（ASCII12）文字"

#: ..\..\source\KLProgrammingGuide\syntax.rst:435
msgid "``\\r``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:436
msgid "a single carriage return (ASCII 13) character"
msgstr "単一のキャリッジリターン（ASCII 13）文字"

#: ..\..\source\KLProgrammingGuide\syntax.rst:437
msgid "``\\t``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:438
msgid "a single carriage tab (ASCII 9) character"
msgstr "単一のキャリッジタブ（ASCII9）文字"

#: ..\..\source\KLProgrammingGuide\syntax.rst:439
msgid "``\\v``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:440
msgid "a single vertical tab (ASCII 11) character"
msgstr "単一の垂直タブ（ASCII11）文字"

#: ..\..\source\KLProgrammingGuide\syntax.rst:441
msgid "``\\a``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:442
msgid "a single bell (ASCII 7) character"
msgstr "単一のベル（ASCII7）文字"

#: ..\..\source\KLProgrammingGuide\syntax.rst:443
msgid "``\\b``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:444
msgid "a single backspace (ASCII 8) character"
msgstr "単一のバックスペース（ASCII8）文字"

#: ..\..\source\KLProgrammingGuide\syntax.rst:445
msgid "``\\0``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:446
msgid "a single null (ASCII 0) character"
msgstr "単一のヌル（ASCII0）文字"

#: ..\..\source\KLProgrammingGuide\syntax.rst:447
msgid "``\\\"``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:448
msgid "a single double-quote (ASCII 34) character"
msgstr "単一の二重引用符（ASCII34）文字"

#: ..\..\source\KLProgrammingGuide\syntax.rst:449
msgid "``\\'``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:450
msgid "a single single-quote (ASCII 39) character"
msgstr "単一のシングルクォート（ASCII39）文字"

#: ..\..\source\KLProgrammingGuide\syntax.rst:451
msgid "``\\\\``"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:452
msgid "a single backslash (ASCII 92) character"
msgstr "単一のバックスラッシュ（ASCII92）文字"

#: ..\..\source\KLProgrammingGuide\syntax.rst:454
msgid ":samp:`\\\\x{HH}`"
msgstr ""

#: ..\..\source\KLProgrammingGuide\syntax.rst:454
msgid ""
"A single character whose ASCII code is given in hexadecimal.  The two "
"characters :samp:`{HH}` must each be a hexadecimal character, ie. in one of "
"the ranges ``0...9``, ``a...f`` and ``A...F``.  For example, the escape "
"sequence ``0x0A`` (decimal 10) is equivalent to the escape sequence ``\\n`` "
"(ASCII 10)."
msgstr ""
"単一の文字、ASCIIコード16進数で指定。2つの文字 :samp:`{HH}` はともに16進文字です。（すなわち ``0...9``, "
"``a...f``, ``A...F``)。例： ``0x0A`` (十進数の10) はエスケープシーケンスの ``\\n`` (ASCII 10) "
"に等しくなります。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:465
msgid "The ``FILE`` and ``LINE`` Constants"
msgstr "``FILE`` 、 ``LINE`` 定数"

#: ..\..\source\KLProgrammingGuide\syntax.rst:467
msgid ""
"The two keywords ``FILE`` and ``LINE`` are special constants in a KL "
"program.  The keyword ``FILE`` is replaced by a string constant whose value "
"is the filename of the current file being compiled.  The keyword ``LINE`` is"
" similarly replaced with an integer constant whose value is the line number "
"of the current file being compiled.  So, for example, if the following KL "
"source code is passed on standard input:"
msgstr ""
"この2つのキーワード ``FILE`` と ``LINE`` はKLプログラム中、特別な定数です。 ``FILE`` "
"はコンパイルされている現在のファイルのファイル名と同一な文字列定数に置換されます。 ``FILE`` "
"は同様に、現在のファイル中での行番号と同一な整数定数日感されます。例えば、以下のKLソースコードが標準入力から渡されると："

#: ..\..\source\KLProgrammingGuide\syntax.rst:479
msgid "Program Structure"
msgstr "プログラム構造"

#: ..\..\source\KLProgrammingGuide\syntax.rst:481
msgid ""
"A KL program consists of zero or more :index:`global declarations <single: "
"global declaration>` in sequence.  A global declaration is one of:"
msgstr ""
"KLプログラムはそのシーケンス中にゼロ個以上の :index:`global declarations <single: global "
"declaration>` から成ります。グローバル宣言は次のいずれかです："

#: ..\..\source\KLProgrammingGuide\syntax.rst:483
msgid ""
"A declaration of a function, a function prototype, an operator, a "
"constructor, a destructor, a method or an operator overload; see "
":ref:`functions`."
msgstr ""
":ref:`functions` 関数の宣言、関数プロトタイプの宣言、オペレータの宣言、コンストラクタの宣言、デストラクタの宣言、メソッドの宣言、演算子オー"
"バーロードの宣言"

#: ..\..\source\KLProgrammingGuide\syntax.rst:485
msgid ""
"A declaration of a structure or an object; see :ref:`KLPG.types.structures` "
"and :ref:`KLPG.types.objects`."
msgstr ""
":ref:`KLPG.types.structures`, :ref:`KLPG.types.objects` : 構造体の宣言、オブジェクトの宣言"

#: ..\..\source\KLProgrammingGuide\syntax.rst:487
msgid ""
"A declaration of global named constant; see :ref:`KLPG.global.named-"
"constants`."
msgstr ":ref:`KLPG.global.named-constants` ：グローバル定数の宣言"

#: ..\..\source\KLProgrammingGuide\syntax.rst:489
msgid "A ``require`` statement; see see :ref:`KLPG.require`"
msgstr ":ref:`KLPG.require` ：  ``require`` 文"

#: ..\..\source\KLProgrammingGuide\syntax.rst:491
msgid ""
"In turn, functions, operators, and other similar constructs consist of zero "
"or more :index:`statements <single: statement>`.  Each statement is "
"terminated with a ``;`` (semicolon) character.  For more detailed "
"information on all the statements available in KL, see :ref:`statements`."
msgstr ""
"関数、オペレータ、他同様は、ゼロ以上の :index:`statements <single: statement>` を構成します。どの文も ``;`` "
"（セミコロン）で終わります。KLで利用可能な文に関する詳しい情報は  :ref:`statements` を参照してください。"

#: ..\..\source\KLProgrammingGuide\syntax.rst:493
msgid ""
"A sequence of statements, surrounded by braces (a ``{`` and a ``}``), can "
"take the place of a single statement.  This also introduces a nested scope; "
"for more information, see :ref:`scope-compound-statement`."
msgstr ""
"中括弧（``{`` と ``}``）で囲まれた複数の文の連なりは、単文の場をとることができます。これによりネストされたスコープを導入できます。より詳しい情報"
"は :ref:`scope-compound-statement` を参照してください。"
